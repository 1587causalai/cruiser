<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>巡洋舰 Cruiser</title>
    <link>/</link>
    <description>Recent content on 巡洋舰 Cruiser</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Sep 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/creating-a-new-theme/</guid>
      <description>Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description>
    </item>
    
    <item>
      <title>公司业务介绍</title>
      <link>/services/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>/services/</guid>
      <description>Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png  should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description>
    </item>
    
    <item>
      <title>Learn how to learn</title>
      <link>/post/learn-how-to-learn/</link>
      <pubDate>Mon, 26 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/learn-how-to-learn/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Python for Everybody</title>
      <link>/post/py4e/</link>
      <pubDate>Tue, 16 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/py4e/</guid>
      <description>混沌巡洋舰深度学习训练营材料
Python已日益成为人工智能世界的通用语言，使用python正日益像使用英语一样成为人人必回的通用技能（已经开始列入一些省份的英语提纲）。
Python之所以能取得这样的江湖地位，第一是好学， 有时就像在说话， 二是它是个胶水语言，可以轻松承担起程序世界粘合剂的作用，三呢， 还是因为好学，结果很多人来贡献开源代码，使得出现了非常多优秀的开源库， 结果python开发几乎可以瞬间站在巨人的肩膀上， 那效率，就是飞一般的感觉了。
人人都应该学点 python, 系统化的刻意训练掌握 python 是捷径！本文介绍一个非常优质的 python 学习系统 ———— PY4E。
网址：https://www.py4e.com/
该学习系统是针对小白的，不需要编程基础。建议前往网页版本查看此文。
PY4E 是什么？ PY4E 就是 python for everybody 的缩写， 它一个非常优质的 python 学习系统，包含如下的内容
 模块化的 python 知识讲解 理论和代码紧密结合的在线教材 精心设计的 Coursera 专项课程  首先看看 PY4E 的模块系统
 模块化的 python 知识讲解   每个模块包含视频，slides和其他相关资料。例如正则表达式模块如下：
 2, 理论和代码紧密结合的在线教材
 教材的每个章节，分别对应每个知识讲解模块。 教材地址：https://www.py4e.com/html3/
 3, 精心设计的 Coursera 专项课程
 该专项总共包含4个小课程和一个 Capstone， 四个课程分别是：
 Programming for Everybody (Getting Started with Python) Python Data Structures Using Python to Access Web Data Using Databases with Python  而 Capstone 是用项目来实践前面课程中内容，端对端的实现获取数据，处理数据和可视化数据！</description>
    </item>
    
    <item>
      <title>What you need to do deep learning?</title>
      <link>/post/what-you-need-to-do-deep-learning/</link>
      <pubDate>Tue, 09 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/what-you-need-to-do-deep-learning/</guid>
      <description>巡洋舰深度训练营材料
深度学习需要什么？  本文根据文章 What you need to do deep learning __by Rachel Thomas 给出一个最简单的回答。
经常有人会问：
深度学习需要什么样的电脑？ 怎样入门深度学习？ 对于深度学习初学者，有什么建议？ 怎用应用深度学习技术到某个具体的问题？  这些问题其实就是
 深度学习需要什么样的硬件，软件，背景和数据？
 硬件 –&amp;gt; 一个很贵的GPU！
深度学习硬件很大的受益于游戏产业的高性能GPUs， 众多不同种类的显卡，我们推荐选择 Nvidia 公司的显卡。
如果你的电脑没有 GPU 或者不是英伟达的 GPU，那么你有以下几个选择使用 fast.ai 的 Crestle 云服务，亚马逊云， 阿里云等。使用起来有些麻烦，使用方法参考原文：http://www.fast.ai/2017/11/16/what-you-need/ 。
 软件 深度学习是一个新兴领域，软件库和工具包每天都在快速地提升。我们建议使用 Pytorch。为什么不推荐 Tensorflow 呢？ 主要原因是 Tensorflow 的动态计算图机制不成熟，其会话管理机制也有学习成本。Pytorch 适用于探索科研和快速开发模型原型， 它相对来说更容易理解和使用。原文总结了如下几个理由:
 易于调试 动态计算图更适用于自然语言处理 支持传统的面向对象编程风格 TensorFlow 的 上下文管理器和会话等机制需要我们花费额外的精力学习   背景 深度学习需要的基础主要包括两个部分：
 一年左右的编程经验 少量线性代数，微积分和概率论基础  虽然数学对学好深度学习极其重要，但是我们不建议在前期花太多时间在数学基础上。个人建议是直接看看西瓜书的数学附录， 花书中的数学基础部分。</description>
    </item>
    
    <item>
      <title>Hello R Markdown</title>
      <link>/post/2015-07-23-r-rmarkdown/</link>
      <pubDate>Thu, 23 Jul 2015 21:13:14 -0500</pubDate>
      
      <guid>/post/2015-07-23-r-rmarkdown/</guid>
      <description>R Markdown This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.
You can embed an R code chunk like this:
summary(cars) ## speed dist ## Min. : 4.0 Min. : 2.00 ## 1st Qu.:12.0 1st Qu.: 26.00 ## Median :15.0 Median : 36.00 ## Mean :15.4 Mean : 42.98 ## 3rd Qu.</description>
    </item>
    
    <item>
      <title>巡洋舰知乎专栏</title>
      <link>/post/zhihu-articles/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/zhihu-articles/</guid>
      <description>Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at installing hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
 Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:</description>
    </item>
    
    <item>
      <title>我们的团队</title>
      <link>/post/our-team/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/our-team/</guid>
      <description>&lt;p&gt;公司团队介绍&lt;/p&gt;

&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;http://golang.org/&amp;gt;&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in go templates.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>项目</title>
      <link>/post/projects/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>/post/projects/</guid>
      <description>&lt;p&gt;介绍公司项目和发展历程&lt;/p&gt;

&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;http://golang.org/&amp;gt;&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&amp;gt;&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in go templates.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>About Us</title>
      <link>/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/about/</guid>
      <description>巡洋舰科技，致力于建立一个线上的人工智能实验室 ，力图用视频，图片，文字和Jupyter notebook代码构建一个在线交互的人工智能教学引擎，让所有人能够在最快最短的时间对数据挖掘，机器学习，深度学习直接上手实践，寻找符合自己需求的最短学习路径，进行知识的持续更新。
 我们对涉及的全部知识点进行notebook代码实现，采用单刀直入的方法先让用户体验代码的总体效果，然后再分步骤详解，理解算法的数理本质，以及编程技巧。 用户可以轻松的利用我们已经构建的代码模块实现自己的算法。
 我们正在构建一部全国首例的系统性深度实战教程， 将深度学习的前沿应用案例库融入到系统里。
 社区支持，成立于2015年底的AI， 复杂系统跨学科社区， 力图用人工智能和量化建模的思维解读世界。社区经过三年的积累，拥有数千分布在各个领域的活跃用户，巡洋舰社区为学员把AI应用到各个产业提供桥梁
 我们的媒体平台混沌巡洋舰公众号，荟萃了巡洋舰专家在整个领域的长时间积累， 多数文章为独树一帜的原创文章。
  </description>
    </item>
    
  </channel>
</rss>